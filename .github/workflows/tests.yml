# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Tests CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: code/client

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - uses: actions/checkout@v3
    - name: CI Frontend ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - run: npm ci
    - run: npm run coverage

    - name: Upload frontend code coverage report
      uses: actions/upload-artifact@v3
      with:
        name: frontend-coverage-unit-report
        path: ./code/client/coverage/lcov.info

    # - name: Upload frontend E2E test coverage report
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: backend-e2e-coverage-report
    #     path: ./code/client/coverage/e2e/lcov.info

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: code/server

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - uses: actions/checkout@v3
    - name: CI Backend ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - run: npm ci
    - run: npm test
    - run: npm run integration

    - name: Upload backend unit test coverage report
      uses: actions/upload-artifact@v3
      with:
        name: backend-unit-coverage-report
        path: ./code/server/coverage/lcov.info

    - name: Upload backend integration test coverage report
      uses: actions/upload-artifact@v3
      with:
        name: backend-integration-coverage-report
        path: ./code/server/coverage/integration/lcov.info

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}